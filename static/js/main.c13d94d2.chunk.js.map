{"version":3,"sources":["MockData/employees.js","Components/Employee/employees.js","Components/UseRefExamples/useRefExample.js","Components/Handontable/handsontable.js","Components/ForwardRefExamples/multipleForwardRefs.js","Components/ForwardRefExamples/callForwardRef.js","slices/increaseDecreaseSlice.js","Components/ReduxStoreInteraction/interactWithRedux.js","Components/navbar.js","Components/Router/router.js","Components/clock.js","Components/Presentation/buttonappbar.js","App.js","serviceWorker.js","slices/sessionSlice.js","slices/index.js","store/index.js","index.js"],"names":["bigList","Array","map","name","faker","findName","country","address","age","phone","phoneNumber","id","random","number","Employees","count","useSelector","state","increaseDecreaseReducer","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","employeesData","slice","emp","UseRefExample","refTxtName","useRef","refLblDisplay","useEffect","current","focus","type","ref","Button","color","variant","onClick","console","log","innerText","value","Handsontable","React","forwardRef","props","reftxtName","refTxtAge","refTxtGender","CallForwardRef","refMultiple","createSlice","initialState","reducers","increase","decrease","reinitialize","actions","reducer","InteractWithRedux","dispatch","useDispatch","Navbar","to","Router","path","Clock","styles","even","odd","useState","Date","time","setTime","setTimeout","style","getSeconds","toLocaleTimeString","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","Typography","App","Container","maxWidth","Boolean","window","location","hostname","match","languageId","loggedInUserId","roleId","setlanguageId","payload","setloggedInUserId","setRoleId","combineReducers","sessionReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c13d94d2.chunk.js","sourcesContent":["import faker from 'faker'\r\n\r\nconst bigList = [...Array(50)].map(() => ({\r\n  name: faker.name.findName(),\r\n  country: faker.address.country(),\r\n  age: faker.phone.phoneNumber(),\r\n  id: faker.random.number()\r\n}));\r\n\r\nexport default bigList\r\n\r\n// export default [\r\n//   { name: \"shaurya\", age: 23, country: \"USA\" },\r\n//   { name: \"Sam\", age: 26, country: \"India\" },\r\n//   { name: \"Rishu\", age: 32, country: \"USA\" },\r\n//   { name: \"Ishpita\", age: 21, country: \"Austrailia\" },\r\n//   { name: \"Ben Cuttings\", age: 45, country: \"Sri lanka\" },\r\n//   { name: \"Dario\", age: 23, country: \"Italy\" },\r\n// ];\r\n","import React from \"react\";\r\nimport employeesData from \"../../MockData/employees\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Employees() {\r\n  const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Sr. No.</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Age</TableCell>\r\n            <TableCell>Country</TableCell></TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {employeesData.slice(0, count).map((emp) => (\r\n            <TableRow>\r\n              <TableCell>{emp.id}</TableCell>\r\n              <TableCell>{emp.name}</TableCell>\r\n              <TableCell>{emp.age}</TableCell>\r\n              <TableCell>{emp.country}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\"\r\n\r\n\r\nfunction UseRefExample() {\r\n    const refTxtName = useRef(null)\r\n    const refLblDisplay = useRef(null)\r\n    useEffect(() => {\r\n        refTxtName.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            This is my department.\r\n            <br />\r\n            <label>Name: </label>\r\n            <input type=\"textbox\" id='txtName' name='txtName' ref={refTxtName} />\r\n            <Button color=\"primary\" variant=\"contained\"\r\n                onClick={() => console.log(refLblDisplay.current.innerText = refTxtName.current.value)} >Submit</Button>\r\n            <label ref={refLblDisplay} ></label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRefExample\r\n","import React from 'react'\r\n// import { HotTable } from '@handsontable/react'\r\n\r\nfunction Handsontable() {\r\n    // const data = [\r\n    //     ['', 'Tesla', 'Mercedes', 'Toyota', 'Volvo'],\r\n    //     ['2019', 10, 11, 12, 13],\r\n    //     ['2020', 20, 11, 14, 13],\r\n    //     ['2021', 30, 15, 12, 13]\r\n    // ]\r\n\r\n    return (\r\n        <div>\r\n            <h1>My handsontable.</h1>\r\n            {/* <HotTable data={data} licenseKey=\"00000-00000-00000-00000-00000\" colHeaders={true} rowHeaders={true} width=\"600\" height=\"300\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Handsontable\r\n","import React from 'react'\r\n\r\nfunction MultipleForwardRefs(props, ref) {\r\n    const { reftxtName, refTxtAge, refTxtGender } = ref\r\n    return (\r\n        <div>\r\n            <h1>MultipleForwardRefs Component</h1>\r\n            Name : <input type=\"text\" ref={reftxtName} />\r\n            <br />\r\n            Age: <input type=\"text\" ref={refTxtAge} />\r\n            <br />\r\n            Gender: <input type=\"text\" ref={refTxtGender} />\r\n            <br />\r\n            This is address prop value: {props.address}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(MultipleForwardRefs)//","import React, { useEffect, useRef } from \"react\";\r\nimport MultipleForwardRefs from \"./multipleForwardRefs\";\r\n\r\nexport default function CallForwardRef() {\r\n    const refMultiple = { reftxtName: useRef(null), refTxtAge: useRef(null), refTxtGender: useRef(null) }\r\n\r\n    useEffect(() => {\r\n        refMultiple.reftxtName.current.value = \"My Name\"\r\n        refMultiple.refTxtAge.current.value = \"Age\"\r\n        refMultiple.refTxtGender.current.value = \"Gender\"\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <MultipleForwardRefs ref={refMultiple} address=\"201 Saint Pauls\" />\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n//export const initialState = 0\r\n\r\nconst { actions, reducer } = createSlice({\r\n    name: 'increaseDecreaseSlice',\r\n    initialState: 50,\r\n    reducers: {\r\n        increase: (state) => (state + 1)\r\n        , decrease: (state) => (state - 1)\r\n        , reinitialize: (state) => (state = 0)\r\n    }\r\n})\r\n\r\nexport const { increase, decrease, reinitialize } = actions\r\nexport default reducer","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { increase, decrease, reinitialize } from '../../slices/increaseDecreaseSlice'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function InteractWithRedux() {\r\n    const dispatch = useDispatch()\r\n    const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n    useEffect(() => {\r\n        console.log(`Count from useEffect: ${count}`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={() => dispatch(increase())} >Increase</Button>\r\n        &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => dispatch(decrease())} >Decreae</Button>\r\n      &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => dispatch(reinitialize())} >reinitialize</Button>\r\n        Count: {count}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/CallForwardRef\">CallForwardRef</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/InteractWithRedux\">InteractWithRedux</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/UseRefExample\">UseRefExample</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/Handsontable\">Handsontable</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/Employees\">Employees</Link>\r\n            </li>\r\n        </ul>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Employees from \"../Employee/employees\";\r\nimport UseRefExample from \"../UseRefExamples/useRefExample\"\r\nimport Handsontable from '../Handontable/handsontable'\r\nimport CallForwardRef from '../ForwardRefExamples/callForwardRef'\r\nimport InteractWithRedux from '../ReduxStoreInteraction/interactWithRedux';\r\nimport Navbar from '../navbar';\r\n\r\nexport default function Router() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route path=\"/CallForwardRef\" component={CallForwardRef} />\r\n                <Route path=\"/InteractWithRedux\" component={InteractWithRedux} />\r\n                <Route path=\"/UseRefExample\" component={UseRefExample} />\r\n                <Route path=\"/Handsontable\" component={Handsontable} />\r\n                <Route path=\"/Employees\" component={Employees} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nfunction Clock() {\r\n  const styles = { even: { color: \"blue\" }, odd: { color: \"red\" } };\r\n\r\n  const [time, setTime] = useState(new Date());\r\n  const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n    //return () => {\r\n    //    console.log(\"clean up ran.\" + new Date().toLocaleTimeString())\r\n    //}\r\n  });\r\n  return (\r\n    <p>\r\n      <h3 style={time.getSeconds() % 2 === 0 ? styles.even : styles.odd}>\r\n        Time Now Is {time.toLocaleTimeString()}\r\n        &nbsp;Count: {count}\r\n      </h3>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        React Playground\r\n          </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport Router from './Components/Router/router';\nimport \"./App.css\";\nimport Clock from \"./Components/clock\";\n//import { setRoleId } from './slices/sessionSlice'\nimport Container from \"@material-ui/core/Container\"\nimport ButtonAppBar from './Components/Presentation/buttonappbar'\n\nfunction App() {\n  return (\n    <Container maxWidth=\"xl\">\n      <ButtonAppBar />\n      <Router />\n      <Clock />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst { actions, reducer } = createSlice({\r\n    name: 'sessionReducer',\r\n    initialState: {\r\n        languageId: 0,\r\n        loggedInUserId: 0,\r\n        roleId: 0\r\n    },\r\n    reducers: {\r\n        setlanguageId: (state, { payload: languageId }) => { state.languageId = languageId }\r\n        , setloggedInUserId: (state, { payload: loggedInUserId }) => { state.loggedInUserId = loggedInUserId }\r\n        , setRoleId: (state, { payload: roleId }) => { state.roleId = roleId }\r\n    }\r\n})\r\n\r\nexport const { setlanguageId, setloggedInUserId, setRoleId } = actions\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport sessionReducer from './sessionSlice'\r\nimport increaseDecreaseReducer from './increaseDecreaseSlice'\r\n\r\nexport default combineReducers({\r\n    sessionReducer,\r\n    increaseDecreaseReducer\r\n})\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport reducer from '../slices'\r\n//import thunk from 'redux-thunk'\r\n//import reducers from './reducers'\r\n\r\n//const middleware = [thunk]\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    //middleware\r\n})\r\n\r\n//export const { dispatch } = store\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from './store'\nimport { Provider } from 'react-redux'\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}