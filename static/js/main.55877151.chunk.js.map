{"version":3,"sources":["MockData/employees.js","Components/Employee/employees.js","Components/UseRefExamples/useRefExample.js","Components/Handontable/handsontable.js","Components/ForwardRefExamples/multipleForwardRefs.js","Components/ForwardRefExamples/callForwardRef.js","store/state-slices/increaseDecreaseSlice.js","Components/ReduxStoreInteraction/interactWithRedux.js","Components/Formik-Material-UI/helper.js","Components/Formik-Material-UI/Registration.js","Components/RenderProps/ComponentWithRenderProps.js","Components/RenderProps/ComponentToBeRendered.js","Components/RenderProps/RenderPropsDemo.js","api/axios.js","Components/Unsplash/ImagesList.js","Components/navbar.js","Components/Router/router.js","Components/clock.js","Components/Presentation/buttonappbar.js","App.js","serviceWorker.js","store/state-slices/sessionSlice.js","store/state-slices/index.js","store/index.js","index.js"],"names":["bigList","Array","map","name","faker","findName","country","address","age","phone","phoneNumber","id","random","number","Employees","count","useSelector","state","increaseDecreaseReducer","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","employeesData","slice","emp","UseRefExample","refTxtName","useRef","refLblDisplay","useEffect","current","focus","type","ref","Button","color","variant","onClick","console","log","innerText","value","Handsontable","React","forwardRef","props","reftxtName","refTxtAge","refTxtGender","CallForwardRef","refMultiple","createSlice","initialState","reducers","increase","decrease","reinitialize","actions","reducer","InteractWithRedux","dispatch","useDispatch","DisplayFormikState","style","margin","fontFamily","background","fontSize","padding","JSON","stringify","Registration","initialValues","email","password","customized","validationSchema","Yup","required","max","onSubmit","values","setSubmitting","setTimeout","alert","Typography","CheckboxWithLabel","label","TextField","fullWidth","marginTop","marginBottom","isSubmitting","LinearProgress","disabled","submitForm","ComponentWithRenderProps","elevation","renderComponent","renderFunciton","ComponentToBeRendered","RenderPropsDemo","axios","create","baseURL","headers","Authorization","ImagesList","useState","searchTerm","setSearchTerm","images","setImages","get","params","query","then","response","data","results","onChange","e","target","image","width","height","src","urls","regular","alt","alt_description","Navbar","to","Router","path","Clock","styles","even","odd","Date","time","setTime","getSeconds","toLocaleTimeString","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","App","Container","maxWidth","Boolean","window","location","hostname","match","languageId","loggedInUserId","roleId","setlanguageId","payload","setloggedInUserId","setRoleId","combineReducers","sessionReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55877151.chunk.js","sourcesContent":["import faker from 'faker'\r\n\r\nconst bigList = [...Array(50)].map(() => ({\r\n  name: faker.name.findName(),\r\n  country: faker.address.country(),\r\n  age: faker.phone.phoneNumber(),\r\n  id: faker.random.number()\r\n}));\r\n\r\nexport default bigList\r\n\r\n// export default [\r\n//   { name: \"shaurya\", age: 23, country: \"USA\" },\r\n//   { name: \"Sam\", age: 26, country: \"India\" },\r\n//   { name: \"Rishu\", age: 32, country: \"USA\" },\r\n//   { name: \"Ishpita\", age: 21, country: \"Austrailia\" },\r\n//   { name: \"Ben Cuttings\", age: 45, country: \"Sri lanka\" },\r\n//   { name: \"Dario\", age: 23, country: \"Italy\" },\r\n// ];\r\n","import React from \"react\";\r\nimport employeesData from \"../../MockData/employees\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Employees() {\r\n  const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Sr. No.</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Age</TableCell>\r\n            <TableCell>Country</TableCell></TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {employeesData.slice(0, count).map((emp) => (\r\n            <TableRow>\r\n              <TableCell>{emp.id}</TableCell>\r\n              <TableCell>{emp.name}</TableCell>\r\n              <TableCell>{emp.age}</TableCell>\r\n              <TableCell>{emp.country}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\"\r\n\r\n\r\nfunction UseRefExample() {\r\n    const refTxtName = useRef(null)\r\n    const refLblDisplay = useRef(null)\r\n    useEffect(() => {\r\n        refTxtName.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            This is my department.\r\n            <br />\r\n            <label>Name: </label>\r\n            <input type=\"textbox\" id='txtName' name='txtName' ref={refTxtName} />\r\n            <Button color=\"primary\" variant=\"contained\"\r\n                onClick={() => console.log(refLblDisplay.current.innerText = refTxtName.current.value)} >Submit</Button>\r\n            <label ref={refLblDisplay} ></label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRefExample\r\n","import React from 'react'\r\n// import { HotTable } from '@handsontable/react'\r\n\r\nfunction Handsontable() {\r\n    // const data = [\r\n    //     ['', 'Tesla', 'Mercedes', 'Toyota', 'Volvo'],\r\n    //     ['2019', 10, 11, 12, 13],\r\n    //     ['2020', 20, 11, 14, 13],\r\n    //     ['2021', 30, 15, 12, 13]\r\n    // ]\r\n\r\n    return (\r\n        <div>\r\n            <h1>My handsontable.</h1>\r\n            {/* <HotTable data={data} licenseKey=\"00000-00000-00000-00000-00000\" colHeaders={true} rowHeaders={true} width=\"600\" height=\"300\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Handsontable\r\n","import React from 'react'\r\n\r\nfunction MultipleForwardRefs(props, ref) {\r\n    const { reftxtName, refTxtAge, refTxtGender } = ref\r\n    return (\r\n        <div>\r\n            <h1>MultipleForwardRefs Component</h1>\r\n            Name : <input type=\"text\" ref={reftxtName} />\r\n            <br />\r\n            Age: <input type=\"text\" ref={refTxtAge} />\r\n            <br />\r\n            Gender: <input type=\"text\" ref={refTxtGender} />\r\n            <br />\r\n            This is address prop value: {props.address}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(MultipleForwardRefs)//","import React, { useEffect, useRef } from \"react\";\r\nimport MultipleForwardRefs from \"./multipleForwardRefs\";\r\n\r\nexport default function CallForwardRef() {\r\n    const refMultiple = { reftxtName: useRef(null), refTxtAge: useRef(null), refTxtGender: useRef(null) }\r\n\r\n    useEffect(() => {\r\n        refMultiple.reftxtName.current.value = \"My Name\"\r\n        refMultiple.refTxtAge.current.value = \"Age\"\r\n        refMultiple.refTxtGender.current.value = \"Gender\"\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <MultipleForwardRefs ref={refMultiple} address=\"201 Saint Pauls\" />\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n//export const initialState = 0\r\n\r\nconst { actions, reducer } = createSlice({\r\n    name: 'increaseDecreaseSlice',\r\n    initialState: 50,\r\n    reducers: {\r\n        increase: (state) => (state + 1)\r\n        , decrease: (state) => (state - 1)\r\n        , reinitialize: (state) => (state = 0)\r\n    }\r\n})\r\n\r\nexport const { increase, decrease, reinitialize } = actions\r\nexport default reducer","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { increase, decrease, reinitialize } from '../../store/state-slices/increaseDecreaseSlice'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function InteractWithRedux() {\r\n    const dispatch = useDispatch()\r\n    const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n    useEffect(() => {\r\n        console.log(`Count from useEffect: ${count}`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={() => dispatch(increase())} >Increase</Button>\r\n        &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => dispatch(decrease())} >Decreae</Button>\r\n      &nbsp;&nbsp;&nbsp;\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => dispatch(reinitialize())} >reinitialize</Button>\r\n        Count: {count}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const DisplayFormikState = props =>\r\n    <div style={{ margin: '1rem 0' }}>\r\n        <h3 style={{ fontFamily: 'monospace' }} />\r\n        <pre\r\n            style={{\r\n                background: '#f6f8fa',\r\n                fontSize: '.65rem',\r\n                padding: '.5rem',\r\n            }}\r\n        >\r\n            <strong>props</strong> ={' '}\r\n            {JSON.stringify(props, null, 2)}\r\n        </pre>\r\n    </div>;\r\n\r\nexport const MoreResources = props =>\r\n    <div>\r\n        <hr style={{ margin: '3rem 0' }} />\r\n        <h3>More Examples</h3>\r\n        <ul>\r\n            <li>\r\n                <a\r\n                    href=\"https://codesandbox.io/s/q8yRqQMp\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    Synchronous validation\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://codesandbox.io/s/qJR4ykJk\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    Building your own custom inputs\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://codesandbox.io/s/jRzE53pqR\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    3rd-party input components: React-select\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://codesandbox.io/s/QW1rqjBLl\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    3rd-party input components: Draft.js\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://codesandbox.io/s/pgD4DLypy\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    Accessing Lifecyle Methods (resetting a form\r\n                    externally)\r\n        </a>\r\n            </li>\r\n        </ul>\r\n        <h3 style={{ marginTop: '1rem' }}>\r\n            Additional Resources\r\n    </h3>\r\n        <ul>\r\n            <li>\r\n                <a\r\n                    href=\"https://github.com/jaredpalmer/formik\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    GitHub Repo\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://github.com/jaredpalmer/formik/issues\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    Issues\r\n        </a>\r\n            </li>\r\n            <li>\r\n                <a\r\n                    href=\"https://twitter.com/jaredpalmer\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                >\r\n                    Twitter (@jaredpalmer)\r\n        </a>\r\n            </li>\r\n        </ul>\r\n    </div>;\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Button, LinearProgress, Typography } from '@material-ui/core';\r\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui';\r\nimport * as Yup from 'yup';\r\nimport { DisplayFormikState } from './helper';\r\n\r\nexport default function Registration() {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n        customized: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .max(5, 'Must be max 5 characters')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }, 1000);\r\n      }}\r\n    >\r\n      {(props) => (\r\n        <Form>\r\n          <Typography variant='h5'>\r\n            Registration Form - Formik Material UI\r\n          </Typography>\r\n          {/* <div>{JSON.stringify(props)}</div> */}\r\n          <Field\r\n            component={CheckboxWithLabel}\r\n            type='checkbox'\r\n            name='checked'\r\n            label='Material formik'\r\n          />\r\n          <Field\r\n            component={TextField}\r\n            name='email'\r\n            type='email'\r\n            label='Email'\r\n            fullWidth\r\n            required\r\n            style={{ marginTop: 20, marginBottom: 20 }}\r\n          />\r\n          <br />\r\n          <Field\r\n            component={TextField}\r\n            type='password'\r\n            label='Password'\r\n            name='password'\r\n            fullWidth\r\n            style={{ marginTop: 20, marginBottom: 20 }}\r\n          />\r\n          {props.isSubmitting && <LinearProgress />}\r\n          <br />\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={props.isSubmitting}\r\n            onClick={props.submitForm}\r\n            style={{ marginTop: 20, marginBottom: 20 }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <DisplayFormikState {...props} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nexport default function ComponentWithRenderProps(props) {\r\n  return (\r\n    <Paper elevation='10'>\r\n      <h1>ComponentWithRenderProps</h1>\r\n      <h2>Below is from the component rendered via render prop</h2>\r\n      {props.renderComponent}\r\n      <h2>Below is via render prop function</h2>\r\n      {props.renderFunciton(props)}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ComponentToBeRendered() {\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <p>This component will be rendered via render props</p>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ComponentWithRenderProps from './ComponentWithRenderProps';\r\nimport ComponentToBeRendered from './ComponentToBeRendered';\r\n\r\nexport default function RenderPropsDemo() {\r\n  return (\r\n    <div>\r\n      <ComponentWithRenderProps\r\n        color='red'\r\n        renderComponent={<ComponentToBeRendered />}\r\n        renderFunciton={(props) => {\r\n          return (\r\n            <div>\r\n              <hr />\r\n              <h3>This is via render function</h3>\r\n              Prop Color: {props.color}\r\n              <hr />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.unsplash.com/',\r\n    headers:{\r\n        Authorization: 'Client-ID kMzifZYOcGKlxXhYWKF7umfEZ8Zxfnv6wGPKiS7ILic'\r\n    }\r\n})\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from '../../api/axios';\r\n\r\nexport default function ImagesList() {\r\n  const [searchTerm, setSearchTerm] = useState('ganesh');\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('search/photos', {\r\n        params: {\r\n          query: searchTerm,\r\n        },\r\n      })\r\n      .then((response) => setImages(response.data.results));\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div>\r\n      Search Images:\r\n      <input type='text' onChange={(e) => setSearchTerm(e.target.value)} />\r\n      <br />\r\n      {images.slice(0, 2).map((image) => {\r\n        return (\r\n          <div>\r\n            <img\r\n              width='300'\r\n              height='200'\r\n              src={image.urls.regular}\r\n              alt={image.alt_description}\r\n            />\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to='/ImagesList'>ImagesList</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/CallForwardRef'>CallForwardRef</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/InteractWithRedux'>InteractWithRedux</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/UseRefExample'>UseRefExample</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/Handsontable'>Handsontable</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/Employees'>Employees</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/Registration'>Registration</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/RenderPropsDemo'>Render Props Demo</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Employees from '../Employee/employees';\r\nimport UseRefExample from '../UseRefExamples/useRefExample';\r\nimport Handsontable from '../Handontable/handsontable';\r\nimport CallForwardRef from '../ForwardRefExamples/callForwardRef';\r\nimport InteractWithRedux from '../ReduxStoreInteraction/interactWithRedux';\r\nimport Registration from '../Formik-Material-UI/Registration';\r\nimport RenderPropsDemo from '../RenderProps/RenderPropsDemo';\r\nimport ImagesList from '../Unsplash/ImagesList';\r\nimport Navbar from '../navbar';\r\n\r\nexport default function Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/CallForwardRef' component={CallForwardRef} />\r\n        <Route path='/InteractWithRedux' component={InteractWithRedux} />\r\n        <Route path='/UseRefExample' component={UseRefExample} />\r\n        <Route path='/Handsontable' component={Handsontable} />\r\n        <Route path='/Employees' component={Employees} />\r\n        <Route path='/Registration' component={Registration} />\r\n        <Route path='/RenderPropsDemo' component={RenderPropsDemo} />\r\n        <Route path='/ImagesList' component={ImagesList} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nfunction Clock() {\r\n  const styles = { even: { color: \"blue\" }, odd: { color: \"red\" } };\r\n\r\n  const [time, setTime] = useState(new Date());\r\n  const count = useSelector(state => state.increaseDecreaseReducer)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n    //return () => {\r\n    //    console.log(\"clean up ran.\" + new Date().toLocaleTimeString())\r\n    //}\r\n  });\r\n  return (\r\n    <p>\r\n      <h3 style={time.getSeconds() % 2 === 0 ? styles.even : styles.odd}>\r\n        Time Now Is {time.toLocaleTimeString()}\r\n        &nbsp;Count: {count}\r\n      </h3>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            React Playground\r\n          </Typography>\r\n          <Button color='inherit'>Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Router from './Components/Router/router';\nimport \"./App.css\";\nimport Clock from \"./Components/clock\";\n//import { setRoleId } from './slices/sessionSlice'\nimport Container from \"@material-ui/core/Container\"\nimport ButtonAppBar from './Components/Presentation/buttonappbar'\n\nfunction App() {\n  return (\n    <Container maxWidth=\"xl\">\n      <ButtonAppBar />\n      <Router />\n      <Clock />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst { actions, reducer } = createSlice({\r\n    name: 'sessionReducer',\r\n    initialState: {\r\n        languageId: 0,\r\n        loggedInUserId: 0,\r\n        roleId: 0\r\n    },\r\n    reducers: {\r\n        setlanguageId: (state, { payload: languageId }) => { state.languageId = languageId }\r\n        , setloggedInUserId: (state, { payload: loggedInUserId }) => { state.loggedInUserId = loggedInUserId }\r\n        , setRoleId: (state, { payload: roleId }) => { state.roleId = roleId }\r\n    }\r\n})\r\n\r\nexport const { setlanguageId, setloggedInUserId, setRoleId } = actions\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport sessionReducer from './sessionSlice'\r\nimport increaseDecreaseReducer from './increaseDecreaseSlice'\r\n\r\nexport default combineReducers({\r\n    sessionReducer,\r\n    increaseDecreaseReducer\r\n})\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './state-slices';\r\n//import thunk from 'redux-thunk'\r\n//import reducers from './reducers'\r\n\r\n//const middleware = [thunk]\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n  //middleware\r\n});\r\n\r\n//export const { dispatch } = store\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from './store'\nimport { Provider } from 'react-redux'\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}